---
import { Icon } from "astro-icon";
---

<div class="accessibility-wrapper">
  <button class="theme-toggle" data-tooltip="Toggle Theme" aria-label="Toggle theme">
    <Icon name="ri:contrast-2-fill" />
  </button>
  <button class="font-toggle" data-tooltip="Toggle Font Size" aria-label="Toggle font">
    <Icon name="ri:font-size-2" />
  </button>
</div>

<style lang="scss">
  .accessibility-wrapper {
    display: flex;
    gap: 1rem;
    position: fixed;
    bottom: 100px;
    right: 100px;
    @media (max-width: 1400px) {
      flex-direction: column;
      background: black;
      padding: 0.3rem;
      right: 0;
    }
  }

  button {
    background: none;
    font-size: 1.1rem;
    font-weight: 500;
    border: none;
    cursor: pointer;
    position: relative;
  }
  button::before,
  button::after {
    --scale: 0;

    @media (max-width: 1400px) {
      visibility: hidden;
    }

    position: absolute;
    top: -0.25rem;
    left: 50%;
    transform: translateX(-50%) translateY(-100%) scale(var(--scale));
    transition: 50ms transform;
    transform-origin: bottom center;
  }

  button::before {
    transform: translateX(-50%) translateY(calc(-100% - 20px))
      scale(var(--scale));

    content: attr(data-tooltip);
    color: var(--color-background);
    padding: 0.5rem;
    border-radius: 0.3rem;
    width: max-content;
    text-align: center;
    background-color: var(--color-accent);
  }
  button::after {
    content: "";
    border: 10px solid transparent;
    border-top-color: var(--color-accent);
    transform-origin: top center;
  }
  button:hover::before,
  button:hover::after {
    --scale: 1;
  }

  [astro-icon] {
    height: 25px;
    color: var(--color-accent);
  }
</style>

<script is:inline>
const theme = (() => {
  if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    return localStorage.getItem("theme");
  }
  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  }
  return "light";
})();

if (theme === "light") {
  document.documentElement.classList.remove("dark");
} else {
  document.documentElement.classList.add("dark");
}

window.localStorage.setItem("theme", theme);

const handleToggleClick = () => {
  const element = document.documentElement;
  element.classList.toggle("dark");

  const isDark = element.classList.contains("dark");
  localStorage.setItem("theme", isDark ? "dark" : "light");
};

const handleFontToggleClick = () => {
  document.documentElement.classList.toggle("accessibility-fontsize");
};

document
  .querySelector(".theme-toggle")
  .addEventListener("click", handleToggleClick);
document
  .querySelector(".font-toggle")
  .addEventListener("click", handleFontToggleClick);
</script>
